name: Deploy Fullstack App to Azure

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  APP_NAME: guardian-sphere
  BACKEND_PATH: './guardian_sphere_server'
  NODE_VERSION: '20.x'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    # 1. Checkout du code
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # 3. Installer et construire le frontend
    - name: Build frontend
      run: |
        cd guardian_sphere
        npm install
        npm run build

    # 4. Copier le build du frontend dans le backend
    - name: Move frontend build to backend
      run: |
        mv guardian_sphere/build guardian_sphere_server/public

    # 5. Installer les dépendances du backend
    - name: Install backend dependencies
      run: |
        cd ${{ env.BACKEND_PATH }}
        npm install

    # 6. Vérifier les fichiers backend
    - name: Check backend files
      run: |
        cd ${{ env.BACKEND_PATH }}
        ls -R

    # 7. Déployer le backend sur Azure
    - name: Deploy backend to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.BACKEND_PATH }}

    # 8. Tester le déploiement du backend
    - name: Test backend deployment
      run: |
        curl -I https://guardian-sphere.azurewebsites.net/api/health || echo "Backend health check failed"
